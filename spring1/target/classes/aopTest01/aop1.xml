<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<bean id="board" class="aopTest01.Board"/> <!-- 핵심관심 -->
	<bean id="member" class="aopTest01.Member"/> <!-- 핵심관심 -->
	<bean id="common" class="aopTest01.Common"/> <!-- 공통관심 -->

	<aop:config><!-- aop 설정 -->
		<aop:pointcut expression="execution(public * aopTest01.*.*(..))" id="pc" /><!--id : 별칭의 개념으로 사용 -->
		<!-- 
		공통관심을 사용할 대상(메소드) 뽑기
		execution(public * aopTest01.*.*(..))
		지켜야할것 : public과 aopTest01패키지안에 들어있는 메소드 (즉, Member의 login()메소드는 protected지정자를 사용했기 때문에 대상에 해당 X)
		cf) (..) : 매개변수 상관 X(타입도 개수도 상관 X)
		cf) (*,*) : 매개변수 타입은 상관없지만 2개여야함
		cf) (int) : 매개변수로 int형 타입 한개만 받음
		cf) 지정자 상관 없게 하려면? 작성 안하면 됨 -> execution(* aopTest01.*.*(..))
		밑에 바꿔가면서 연습
		-->		
		<!-- <aop:pointcut expression="execution(* aopTest01.*.log*(..))" id="pc" /> --><!-- log로 시작하는 메소드만 적용 -->
		<!-- <aop:pointcut expression="execution(public void aopTest01.*.*(..))" id="pc" /> --><!-- 반환타입 제한 -->
		<!-- <aop:pointcut expression="execution(public * aopTest01.*.*(int))" id="pc" /> -->
		
		<aop:aspect id="c" ref="common"><!-- 공통 관심 정의 -->
		<!-- common의 메소드 종류와 끼어넣을 지점 지정 -->
		<!-- before : 선택한 대상들을 넣은 pc의 before(앞에) 공통 관심 클래스 객체인 common의 print메소드를 끼어넣겠다 -->
		<!-- <aop:before method="printStart" pointcut-ref="pc"/> -->
		<!-- <aop:after method="printEnd" pointcut-ref="pc"/> -->
		<!-- 메소드 종료 후 리턴타입 사용 : returning 속성 필요!
		returning? 지정한 method의 매개변수 이름
		returning? 리턴값을 저장할 곳 -->
		<!-- <aop:after-returning method="printResult" pointcut-ref="pc" returning="val"/> -->
		<aop:around method="printAround" pointcut-ref="pc"/><!--poincut-ref에 execution(* aopTest01.*.log*(..))라고 써도 되지만, 길어서 이름 지정함  -->
		</aop:aspect>
	</aop:config>
</beans>
